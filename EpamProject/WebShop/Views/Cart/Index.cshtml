@model WebShop.ViewModels.Cart.CartIndexModel

@{
    ViewData["Title"] = "Cart";
}

<h1 style="font-size: 45px; margin-bottom: 50px;">
    Your Cart
</h1>

@if (Model.CartItemsList.Any())
{
    <div class="cart_nav">
        <div>
            <a asp-controller="Product" asp-action="Index" class="back_btn btn">
                <img class="back_btn_img" src="~/img/back_icon.svg" alt="Go Back" />
            </a>
            <form id="clear" method="post">
                <input type="submit" @*asp-action="RemoveAllItems" *@ id="btn_clear" class="btn" value="Clear">
            </form>
        </div>
        <h2 id="total">
            Total:
            <span id="total_number">
                @string.Format("{0:C}", Model.Total)
            </span>
        </h2>
    </div>
    <form id="cart" method="post">
        <div class="cart_items">
            @foreach (var cartItem in Model.CartItemsList)
            {
                <div id="item_@cartItem.CartItemId" class="cart_item">
                    <div class="cart_item_img_box">
                        <img src="@cartItem.ImageURL"
                             alt="@cartItem.Name"
                             class="cart_item_img" />
                    </div>
                    <div class="cart_item_nav">
                        <a style="color: #fff;" asp-controller="Product" asp-action="Details" asp-route-id="@cartItem.ProductId" class="cart_item_title">@cartItem.Name</a>
                        <h3 class="cart_item_price">@string.Format("{0:C}", cartItem.Price)</h3>
                        <div class="cart_item_amount">
                            <a id="minus" data-id="@cartItem.CartItemId" class="cart_item_amount_count">-</a>
                            <h2 class="cart_item_amount_number">@cartItem.Amount</h2>
                            <a id="plus" data-id="@cartItem.ProductId" class="cart_item_amount_count">+</a>
                        </div>
                    </div>
                    <a data-id="@cartItem.CartItemId" class="cart_item_delete"></a>
                </div>
            }
        </div>
    </form>
}
else
{
    <a asp-controller="Product" asp-action="Index" class="back_btn btn">
        <img class="back_btn_img" src="~/img/back_icon.svg" alt="Go Back" />
    </a>
    <h2 style="text-align:center; vertical-align:middle; font-size: 85px;">No Items</h2>
}

@*asp-action="RemoveFromCartAtAll" asp-route-id="@cartItem.CartItemId" *@

<script>
    document.addEventListener('DOMContentLoaded', () => {
        let total = document.querySelector('#total');
        let totalNumber = document.getElementById('total_number');
        let cart = document.getElementById('cart');
        let cartItems = document.querySelector('.cart_items');
        let clear = document.querySelector('#clear');

        let plusButtons = document.querySelectorAll('#plus');
        let minusButtons = document.querySelectorAll('#minus');
        let deleteButton = document.querySelectorAll('.cart_item_delete');
        let clearButton = document.querySelector('#btn_clear');


        const formatter = new Intl.NumberFormat('en-US', {
            style: 'currency',
            currency: 'USD',
            minimumFractionDigits: 2
        });

        function removeItem(button) {
            button.onclick = function (e) {
                e.preventDefault();

                let itemToDelete = button.dataset.id;
                let cartItem = button.closest(`#item_${itemToDelete}`);
                let quantity = button.nextElementSibling;
                let xhr = new XMLHttpRequest();

                xhr.open('POST', `/Cart/RemoveFromCart/`, true);
                xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');
                xhr.onload = function () {
                    if (this.status == 200 && quantity.innerHTML >= '1') {
                        if (quantity.innerHTML == '1' && cartItems.children.length > 1) {
                            cartItem.style.opacity = 0;
                            setTimeout(() => { cartItem.parentNode.removeChild(cartItem); }, 400);
                        }
                        else if (quantity.innerHTML == '1' && cartItems.children.length <= 1) {
                            total.style.opacity = 0;
                            cartItem.style.opacity = 0;
                            clear.style.opacity = 0;
                            cart.style.opacity = 0;
                            setTimeout(() => {
                                cartItem.parentNode.removeChild(cartItem);
                                clear.parentnode.removechild(clear);
                                total.parentnode.removechild(total);
                                cart.parentnode.removechild(cart);
                            }, 500);
                            setTimeout(() => {
                                document.querySelector('#main').innerHTML += '<h2 id="no_items">No Items</h2 >';
                                document.getElementById('no_items').style.opacity = 1;
                            }, 510);
                        }
                        else {
                            quantity.innerHTML = parseInt(quantity.innerHTML) - 1;
                        }
                        xhr.open('GET', `/Cart/Total`, true);
                        xhr.onload = function () {

                            totalNumber.innerHTML = `${formatter.format(this.responseText)}`;
                        }
                        xhr.send();
                    }
                }
                xhr.send(`id=${itemToDelete}`);
            }
        }

        function addItem(button) {
            button.onclick = function (e) {
                e.preventDefault();

                let itemToAdd = button.dataset.id;
                let xhr = new XMLHttpRequest();

                xhr.open('POST', `/Cart/AddToCart/`, true);
                xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');
                xhr.onload = function () {
                    if (this.status == 200) {
                        button.previousElementSibling.innerHTML = parseInt(button.previousElementSibling.innerHTML) + 1;
                        xhr.open('GET', `/Cart/Total`, true);
                        xhr.onload = function () {

                            totalNumber.innerHTML = `${formatter.format(this.responseText)}`;
                        }
                        xhr.send();
                    }
                }
                xhr.send(`id=${itemToAdd}`);
            }
        }

        function removeItemFromCart(button) {
            button.onclick = function (e) {
                e.preventDefault();

                let itemToDelete = button.dataset.id;
                let cartItem = button.closest(`#item_${itemToDelete}`);
                let xhr = new XMLHttpRequest();

                xhr.open('POST', `/Cart/RemoveFromCartAtAll/`, true);
                xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');
                xhr.onload = function () {
                    if (this.status == 200) {
                        if (cartItems.children.length <= 1) {
                            total.style.opacity = 0;
                            cartItem.style.opacity = 0;
                            clear.style.opacity = 0;
                            cart.style.opacity = 0;
                            setTimeout(() => {
                                cartItem.parentNode.removeChild(cartItem);
                                clear.parentnode.removechild(clear);
                                total.parentnode.removechild(total);
                                cart.parentnode.removechild(cart);
                            }, 500);
                            setTimeout(() => {
                                document.querySelector('#main').innerHTML += '<h2 id="no_items">No Items</h2 >';
                                document.getElementById('no_items').style.opacity = 1;
                            }, 510);
                        }
                        else {
                            cartItem.style.opacity = 0;
                            setTimeout(() => { cartItem.parentNode.removeChild(cartItem); }, 400);
                        }
                        xhr.open('GET', `/Cart/Total`, true);
                        xhr.onload = function () {

                            totalNumber.innerHTML = `${formatter.format(this.responseText)}`;
                        }
                        xhr.send();
                    }
                }
                xhr.send(`id=${itemToDelete}`);
            }
        }

        function removeAll(button) {
            button.onclick = function (e) {
                e.preventDefault();

                let xhr = new XMLHttpRequest();

                xhr.open('POST', '/Cart/RemoveAllItems', true);
                xhr.onload = function () {
                    if (this.status == 200 && cartItems.children.length > 0) {
                        total.style.opacity = 0;
                        clear.style.opacity = 0;
                        cart.style.opacity = 0;
                        setTimeout(() => {
                            total.parentnode.removechild(total);
                            clear.parentnode.removechild(clear);
                            cart.parentnode.removechild(cart);
                        }, 500);
                        setTimeout(() => {
                            document.querySelector('#main').innerHTML += '<h2 id="no_items">No Items</h2 >';
                            document.getElementById('no_items').style.opacity = 1;
                        }, 510);
                    }
                    xhr.open('GET', `/Cart/Total`, true);
                    xhr.onload = function () {

                        totalNumber.innerHTML = `${formatter.format(this.responseText)}`;
                    }
                    xhr.send();
                }
                xhr.send();
            }
        }

        plusButtons.forEach(addItem);
        minusButtons.forEach(removeItem);
        deleteButton.forEach(removeItemFromCart);

    });
</script>

